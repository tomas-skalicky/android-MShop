<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">

	<!-- Configurer that replaces ${...} placeholders with values from a properties file (in this case, 
		JDBC-related settings for the dataSource definition below) -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
		p:location="classpath:jdbc.properties" />
	<!-- Another possibility: <context:property-placeholder location="jdbc.properties" /> -->

	<!-- See the documentation of c3p0: http://www.mchange.com/projects/c3p0/#basic_pool_configuration) -->
	<!-- initialPoolSize ........... Number of connections a pool will try to acquire upon startup. Should be between
									minPoolSize and maxPoolSize. -->
	<!-- minPoolSize ............... Minimum number of connections a pool will maintain at any given time. -->
	<!-- maxPoolSize ............... Maximum number of connections a pool will maintain at any given time. -->
	<!-- acquireIncrement .......... Determines how many connections at a time c3p0 will try to acquire when the
									pool is exhausted, i.e. all create connections are engaged and the current
									number of connections is less than maxPoolSize. -->
	<!-- maxIdleTime ............... Seconds a connection can remain pooled but unused before being discarded.
									Zero means idle connections never expire. -->
	<!-- idleConnectionTestPeriod .. If this is a number greater than 0, c3p0 will test all idle,
									pooled but unchecked-out connections, every this number of seconds.  -->
	<!-- testConnectionOnCheckin ... If true, an operation will be performed asynchronously at every connection checkin
									to verify that the connection is valid. Use in combination with idleConnectionTestPeriod
									for quite reliable, always asynchronous connection testing. -->
	<!-- maxStatements ............. The size of c3p0's global PreparedStatement cache. If both maxStatements and
									maxStatementsPerConnection are zero, statement caching will not be enabled.
									If maxStatements is zero but maxStatementsPerConnection is a non-zero value,
									statement caching will be enabled, but no global limit will be enforced,
									only the per-connection maximum. maxStatements controls the total number of Statements cached,
									for all Connections. If set, it should be a fairly large number,
									as each pooled Connection requires its own, distinct flock of cached statements.
									As a guide, consider how many distinct PreparedStatements are used frequently
									in your application, and multiply that number by maxPoolSize to arrive
									at an appropriate value. Though maxStatements is the JDBC standard parameter
									for controlling statement caching, users may find c3p0's alternative
									maxStatementsPerConnection more intuitive to use. -->
	<bean id="dataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close"
		p:driverClass="${jdbc.driverClassName}"
		p:jdbcUrl="${jdbc.url}"
		p:user="${jdbc.username}"
		p:password="${jdbc.password}"
		
		p:initialPoolSize="3"
		p:minPoolSize="3"
		p:maxPoolSize="10"
		p:acquireIncrement="3"
		p:maxIdleTime="0"
		
		p:idleConnectionTestPeriod="3000"
		p:testConnectionOnCheckin="true"

		p:maxStatements="200">
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="dataSource" />

</beans>
